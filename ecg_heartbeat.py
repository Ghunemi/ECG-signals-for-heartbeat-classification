# -*- coding: utf-8 -*-
"""ECG heartbeat.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VJ8-XFMx8Z86jWMQcUA6OhKln3YzYc74

# Imports and installing dependancies
"""

!pip install opendatasets

import tensorflow as tf
from keras.callbacks import EarlyStopping
from tensorflow.keras.layers import Dense, Activation, Dropout
import opendatasets as od
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""# Dataset gathering"""

dataset_url = 'https://www.kaggle.com/datasets/shayanfazeli/heartbeat'
od.download('https://www.kaggle.com/datasets/shayanfazeli/heartbeat')

df = pd.read_csv('/content/heartbeat/mitbih_train.csv', header=None)
df2 = pd.read_csv('/content/heartbeat/mitbih_test.csv', header=None)

"""# Splitting dataset"""

x_train = df.iloc[:,:187]
y_train = df.iloc[:,-1]

x_test = df2.iloc[:,:187]
y_test = df2.iloc[:,-1]

"""# Model creation"""

model = tf.keras.Sequential()
model.add( tf.keras.layers.Input(shape=[187,]))
model.add( tf.keras.layers.Flatten())
model.add( tf.keras.layers.Dense(512, activation='relu'))
model.add(Dropout(0.4))
model.add( tf.keras.layers.Dense(265, activation='relu'))
model.add(Dropout(0.4))
model.add( tf.keras.layers.Dense(128, activation='relu'))
model.add(Dropout(0.4))
model.add( tf.keras.layers.Dense(64, activation='relu'))
model.add( tf.keras.layers.Dense(5, activation='softmax'))

model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

history = model.fit(x_train, y_train, epochs=150, batch_size=128, validation_data=(x_test, y_test), callbacks = [EarlyStopping(monitor = 'val_loss', patience = 20)])

"""#Evaluation"""

def plot_train_history_loss(history):
    # summarize history for loss
    plt.plot(history.history['loss'])
    plt.plot(history.history['val_loss'])
    plt.title('model loss')
    plt.ylabel('loss')
    plt.xlabel('epoch')
    plt.legend(['train', 'test'], loc='upper right')
    plt.show()

plot_train_history_loss(history)

